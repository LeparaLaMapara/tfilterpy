name: Test, Build, and Deploy to PyPI (Linux only)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .

      - name: Run Tests
        run: pytest tests/

  build-linux:
        if: github.event_name == 'release'
        strategy:
            matrix:
              python: ['3.9', '3.10', '3.11', '3.12']
        runs-on: ubuntu-latest
        container: quay.io/pypa/manylinux2014_x86_64
    
        steps:
        - uses: actions/checkout@v1
    
        - name: Compile c headers
          run: |
            /opt/python/${{ matrix.python }}/bin/python setup.py develop
    
        - name: Build wheel files
          run: |
            /opt/python/${{ matrix.python }}/bin/python setup.py bdist_wheel
    
        - name: Install auditwheel
          run: |
            /opt/python/${{ matrix.python }}/bin/python -m pip install auditwheel
        
        - name: Repair wheel files
          run: |
            /opt/python/${{ matrix.python }}/bin/python -m auditwheel repair dist/*${{ matrix.python }}-linux_x86_64.whl
    
        - name: List contents of dist
          run: ls -R dist
    
        - name: List contests of wheelhouse
          run: ls -R wheelhouse
    
        - name: Move wheelhouse wheel files to dist
          run: |
            rm dist/*
            mv wheelhouse/* dist/
            rmdir wheelhouse
    
        - name: List contents of dist
          run: ls -R dist
    
        - name: Get the name of the wheel file
          id: get-wheel-name
          run: echo "::set-output name=wheel-name::$(ls dist/*.whl)"
    
        - name: Archive build artifacts
          uses: actions/upload-artifact@v1
          with:
            name: dist-artifacts-manylinux-${{ matrix.python }}
            path: ${{ steps.get-wheel-name.outputs.wheel-name }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install twine
        run: |
          pip install --upgrade pip
          pip install twine
    
      - name: Download all artifacts to a specific directory
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Create dist directory
        run: mkdir -p dist

      - name: Move files from subdirectories
        run: |
          for subdirectory in dist/*/; do
            dir_name=$(basename "$subdirectory")
            mv "$subdirectory"* dist/
            rm -r "$subdirectory"
            echo "Moved files from '$dir_name' to 'dist/'"
          done

      - name: Inspect wheel files
        run: |
          ls -R dist

      - name: Upload to PyPI using twine
        run: twine upload --skip-existing dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}